Je m'excuse pour la confusion précédente. Si vous utilisez Spring Boot 1.5.2.release et souhaitez ajouter l'API REST d'Activiti à votre projet tout en conservant la dépendance `activiti-spring-boot-starter-basic`, voici la procédure à suivre :

1. Ajoutez les dépendances nécessaires à votre fichier `pom.xml` :

```xml
<dependency>
    <groupId>org.activiti</groupId>
    <artifactId>activiti-spring-boot-starter-rest</artifactId>
    <version>5.22.0</version>
</dependency>
<dependency>
    <groupId>org.activiti</groupId>
    <artifactId>activiti-spring-boot-starter-basic</artifactId>
    <version>5.22.0</version>
</dependency>
```

Assurez-vous d'utiliser la version `5.22.0` pour ces dépendances, car elle est compatible avec votre version d'Activiti (5.22.0).

2. Dans votre classe principale de démarrage de l'application (généralement annotée avec `@SpringBootApplication`), assurez-vous que la classe est également annotée avec `@EnableActivitiRestApi` pour activer l'API REST d'Activiti. Votre classe principale ressemblera à quelque chose comme ceci :

```java
@SpringBootApplication
@EnableActivitiRestApi
public class VotreApplication {
    public static void main(String[] args) {
        SpringApplication.run(VotreApplication.class, args);
    }
}
```

3. Configurez les propriétés nécessaires pour l'API REST d'Activiti dans votre fichier `application.properties` ou `application.yml` :

```properties
# Configuration de l'API REST d'Activiti
activiti.rest.enable=true
activiti.rest.app-context-path=/activiti
```

Assurez-vous que la propriété `activiti.rest.enable` est définie sur `true` pour activer l'API REST d'Activiti et que `activiti.rest.app-context-path` spécifie le chemin de contexte de l'API (dans cet exemple, `/activiti`).

4. Démarrez votre application Spring Boot et vous devriez pouvoir accéder à l'API REST d'Activiti via l'URL configurée, par exemple `http://localhost:8080/activiti/...`.

Veuillez noter que cette configuration est basée sur les informations disponibles jusqu'à ma date de coupure de connaissances en septembre 2021. Si Activiti a publié des versions plus récentes depuis lors, assurez-vous de consulter la documentation officielle pour obtenir des informations à jour sur la configuration de l'API REST.


Lorsque vous ajoutez l'API REST d'Activiti à votre application Spring Boot, cela peut effectivement ajouter une configuration d'authentification par défaut à votre application.

Activiti REST inclut une configuration de sécurité basée sur Spring Security pour protéger les points de terminaison de l'API. Par conséquent, lorsque vous ajoutez cette dépendance, il est possible qu'une authentification par défaut soit activée.

Si vous souhaitez désactiver l'authentification pour l'API REST d'Activiti, vous pouvez ajuster la configuration de sécurité dans votre application Spring Boot.

Voici quelques options que vous pouvez essayer :

1. Configuration personnalisée de Spring Security : Vous pouvez créer votre propre configuration de sécurité personnalisée en étendant `WebSecurityConfigurerAdapter` dans une classe de configuration séparée. Dans cette classe, vous pouvez spécifier les règles de sécurité souhaitées, y compris la désactivation de l'authentification. Par exemple :

```java
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;

@Configuration
@EnableWebSecurity
public class SecurityConfig extends WebSecurityConfigurerAdapter {

    @Override
    protected void configure(HttpSecurity http) throws Exception {
        http
            .authorizeRequests()
                .anyRequest().permitAll()
                .and()
            .csrf().disable();
    }
}
```

Dans cet exemple, nous avons configuré toutes les requêtes pour qu'elles soient autorisées sans aucune authentification. De plus, nous avons désactivé la protection CSRF (Cross-Site Request Forgery) pour simplifier les tests.

2. Désactivation de l'authentification via les propriétés de configuration : Dans votre fichier `application.properties` ou `application.yml`, vous pouvez désactiver l'authentification en définissant la propriété suivante :

```properties
spring.activiti.rest.app.security.enabled=false
```

Cette propriété désactivera la configuration de sécurité fournie par Activiti REST pour l'API.

Assurez-vous de comprendre les implications de désactiver complètement l'authentification dans votre application. Cela peut poser des problèmes de sécurité dans un environnement de production. Il est recommandé d'évaluer attentivement les besoins de sécurité de votre application et de prendre les mesures appropriées pour protéger vos ressources si nécessaire.
